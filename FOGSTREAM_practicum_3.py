# -------------------- Задание № 1
"""
Даны четыре действительных числа: x1, y1, x2, y2.
Напишите функцию  area(x1, y1, x2, y2), вычисляющую площадь прямоугольного треугольника,
с гипотенузой, проходящей через точки (x1,y1) и (x2,y2). Считайте четыре действительных
числа и выведите результат работы этой функции."""


def area(x1, x2, y1, y2):
    return (x2 - x1) * (y2 - y1) / 2


# -------------------- Задание № 2
"""
Написать функцию is_pow(x), принимающую 1 аргумент — число x от 2 до 1000,
и возвращающую True если это число является целой степенью (с показателем больше 1)
целого числа, и False - иначе."""


def is_pow(x):
    pows = [z**y for y in range(2, 100) for z in range(2, 100) if z**y < 1000]
    if x in pows:
        return True
    else:
        return False


# -------------------- Задание № 3
"""
Дан список результатов попыток одного спортсмена для некоторого соревнования.
Написать функцию stronger(scores), которая считает сколько раз за сессию спортсмен
показал результат лучше, чем в прошлую попытку, то есть текущее значение превышает
предыдущее."""


def stronger(scores):
    try_count = 0
    for i in range(1, len(scores)):
        if scores[i] > scores[i - 1]:
            try_count += 1
    return try_count


# -------------------- Задание № 4
"""
Реализовать функцию map(array, func), принимающей два аргумента:
список и произвольную арифметическую функцию. Функция map должна возвращать новый список,
элементы которого являются результатом функции func."""


def map(array, func):
    return [func(element) for element in array]

    # Расшифровка генератора, выше:
    # new_array = []
    # for element in array:
    #     new_array.append(func(element))
    # return new_array


    # Хотя ответ такой же, но эту чать кода тестировщик отметает
    #
    # for key, value in enumerate(array):
    #     array[key] = func(value)
    # return array

# print(map([1,2,3,4,5], func))


# -------------------- Задание № 5
"""
Реализовать функцию reduce(array, func, init), принимающей два обязательных аргумента:
список и произвольную функцию двух аргументов и один опциональный аргумент - начальное
значение. Функция reduce должна возвращать результат последовательного кумулятивного
вызова функции func с результатом предыдущего вызова и следующим элементом списка.
Если начальное значение не передано, то первый вызов осуществляется с первыми двумя
элементами списка, иначе в первый вызов передаются начальное значение и первый элемент
списка."""


def reduce(array, func, init=0):
    i = 0
    while i < len(array):
        if init == 0:
            init = func(array[i], array[i + 1])
            i = 2
            continue
        init = func(init, array[i])
        i += 1
    return init



# -------------------- Задание № 6
"""
Реализовать функцию-валидатор почтовых адресов validate(email).
Принимает строку, которая содержит адрес электронной почты.
Возвращает True, если адрес валидный, иначе возвращает False.
Валидным адресом называется такой, который удовлетворяет следующим условиям:
1. Имеет формат username@websitename.extension
2. username может содержать только латинские буквы, целые числа, нижние подчеркивания и тире
3. websitename содержит только латинские буквы и целые числа
4. Максимальная длина extension 3 символа."""

import re

def validate(email):
    email = email.lower()
    email_regex = re.compile(r'([0-9a-z_-]+)@([0-9a-z]+)(\.[0-9a-z]{2,3}$)')
    if email_regex.match(email) is None:
        return False
    else:
        return True
